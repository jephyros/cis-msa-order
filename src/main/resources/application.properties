server.port=8180
# ===============================
# = DATA SOURCE
# ===============================

## Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://localhost:3326/msacisorder
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
#logging.level.org.hibernate.type.descriptor.sql=trace
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect


#================ Kafka Setting ===================
spring.kafka.consumer.group-id=kafka-msaorder
spring.kafka.bootstrap-servers=localhost:9092

#Spring cache Setting
spring.cache.type=redis
spring.cache.redis.time-to-live=10000ms
spring.redis.host=localhost
spring.redis.port=6379

#JWT Auth
#security.oauth2.client.client-id=auth_id
#security.oauth2.client.client-secret=auth_secret
#security.oauth2.resource.jwt.key-value=jwt_secret_key